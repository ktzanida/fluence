var searchIndex = JSON.parse('{\
"air_interpreter_fs":{"doc":"","t":[5,5],"n":["air_interpreter_path","write_default_air_interpreter"],"q":["air_interpreter_fs",""],"d":["",""],"i":[0,0],"f":[[[["path",3]],["pathbuf",3]],[[["path",3]],["result",6]]],"p":[]},\
"aquamarine":{"doc":"","t":[3,3,8,3,4,3,13,13,13,16,13,4,16,13,3,3,13,3,3,13,3,13,13,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12],"n":["AVM","AVMConfig","AquaRuntime","AquamarineApi","AquamarineApiError","AquamarineBackend","AquamarineDied","AquamarineQueueFull","CleanupData","Config","CreateDataStore","DataStoreError","Error","ExecutionTimedOut","InterpretationStats","NetworkEffects","OneshotCancelled","ParticleDataStore","ParticleEffects","ParticleExpired","Plumber","StoreData","VaultError","VmConfig","VmPoolConfig","air_interpreter","air_wasm_path","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","call","call_requests","cleanup","cleanup","cleanup_data","cleanup_data","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","create_particle_vault","create_runtime","create_runtime","current_peer_id","current_peer_id","data_file","data_store","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","empty","execute","execution_timeout","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","ingest","init","init","init","init","init","init","init","init","init","init","init","init","init","initialize","interpretation_time","into","into","into","into","into","into","into","into","into","into","into","into","into","into_effects","into_effects","into_particle_id","logging_mask","max_heap_size","max_heap_size","new","new","new","new","new","new","new","new_data_len","next_peers","next_peers","particle","particle","particle_data_store","particles_dir","particles_vault_dir","poll","poll","pool_size","read_data","source","start","store_data","success","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vault","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","particle_id","particle_id","particle_id","particle_id","particle_id","timeout","0","0","0","0","1"],"q":["aquamarineaquamarine::AquamarineApiError","","","","","","aquamarine::DataStoreError","","","",""],"d":["","Describes behaviour of the AVM.","","","","","","","","","","","","","Performance stats about particle’s interpretation","Network part of the [ParticleEffects. Can’t be executed …","","","Effects produced by particle execution. Currently the only …","","","","","","","Path to AIR interpreter .wasm file (aquamarine.wasm)","Path to a AIR interpreter Wasm file.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Instruction to execute host calls","","","Cleanup data that become obsolete.","","","","","","","","","","","","","","","","","","Creates <code>AVM</code> in background (on blocking threadpool)","Current peer id.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Send particle to the interpreters pool","Timeout of a particle execution","","","","","","","","","","","","","","","","","","","","","","","","","Receives and ingests incoming particle: creates a new …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Mask used to filter logs, for details see <code>log_utf8_string</code> …","Maximum heap size in bytes available for the interpreter.","Maximum heap size in bytes available for the interpreter.","Create AVM with provided config.","","","","","","","","Instruction to send particle to these peers","","Particle associated with these effects","","","Dir for the interpreter to persist particle data to merge …","Dir to store directories shared between services in the …","","","Number of VMs to create","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,1,2,3,2,0,3,1,0,0,1,0,0,1,0,2,2,0,0,4,5,6,5,7,8,9,10,4,1,11,2,12,13,14,6,5,7,8,9,10,4,1,11,2,12,13,14,3,6,6,12,3,6,6,11,9,10,4,11,12,13,14,9,10,4,11,12,13,14,11,3,6,5,4,11,5,6,5,7,8,9,10,4,1,11,2,12,13,14,6,5,7,8,9,10,4,1,11,2,12,13,14,6,5,7,8,9,10,4,1,11,2,12,13,14,12,9,10,10,4,1,1,11,2,2,12,13,14,6,5,7,8,9,10,4,1,11,2,2,12,13,14,8,6,5,7,8,9,10,4,1,11,2,12,13,14,11,13,6,5,7,8,9,10,4,1,11,2,12,13,14,3,6,1,5,5,4,6,7,8,9,10,4,11,13,12,14,12,14,11,4,4,7,8,10,11,2,7,11,13,9,10,4,11,12,13,14,1,2,6,5,7,8,9,10,4,1,11,2,12,13,14,6,5,7,8,9,10,4,1,11,2,12,13,14,6,5,7,8,9,10,4,1,11,2,12,13,14,11,6,5,7,8,9,10,4,1,11,2,12,13,14,15,16,17,18,19,18,20,21,22,23,22],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["peerid",3],["string",3],["vec",3,[["u8",15]]],["str",15],["callresults",6]],["result",4,[["avmoutcome",3]]]],[[["str",15],["hashmap",3,[["u32",15],["callserviceresult",3],["randomstate",3]]]],["result",4,[["avmoutcome",3],["avmerror",4]]]],[[["peerid",3],["string",3],["vec",3,[["u8",15]]],["str",15],["callresults",6]],["result",4,[["avmoutcome",3]]]],null,[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4,[["avmerror",4]]]],[[["str",15]],["result",4,[["datastoreerror",4]]]],[[],["aquamarineapi",3]],[[],["vmpoolconfig",3]],[[],["vmconfig",3]],[[],["particledatastore",3]],[[],["particleeffects",3]],[[],["interpretationstats",3]],[[],["networkeffects",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4,[["datastoreerror",4]]]],[[["waker",3]],["boxfuture",6,[["result",4]]]],[[["waker",3]],["boxfuture",6,[["result",4]]]],null,null,[[["str",15]],["pathbuf",3]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["particle",3]]],[[["particle",3],["option",4,[["box",3,[["fnmut",8]]]]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["vaulterror",4]]],[[]],[[]],[[]],[[["particle",3],["option",4,[["box",3,[["fnmut",8]]]]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["result",4,[["datastoreerror",4]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["result",4,[["avmoutcome",3]]],["particle",3]],["particleeffects",3]],[[["result",4,[["avmoutcome",3],["avmerror",4,[["datastoreerror",4]]]]],["particle",3]],["particleeffects",3]],[[],["string",3]],null,null,null,[[["avmconfig",3]],["result",4,[["avm",3],["avmerror",4]]]],[[["vmpoolconfig",3],["outlet",6,[["result",4,[["networkeffects",3],["aquamarineapierror",4]]]]],["option",4,[["particleexecutormetrics",3]]],["option",4,[["vmpoolmetrics",3]]]]],[[["vmpool",3],["option",4,[["particleexecutormetrics",3]]]]],[[["backpressuredoutlet",6,[["command",4]]],["duration",3]]],[[["usize",15],["duration",3]]],[[["peerid",3],["pathbuf",3],["pathbuf",3],["option",4,[["u64",15]]]]],[[["pathbuf",3],["pathbuf",3]]],null,null,null,null,null,null,null,null,[[["context",3]],["poll",4]],[[["context",3]],["poll",4,[["result",4,[["networkeffects",3],["aquamarineapierror",4]]]]]],null,[[["str",15]],["result",4,[["vec",3,[["u8",15]]],["datastoreerror",4]]]],[[],["option",4,[["error",8]]]],[[],["joinhandle",3]],[[["str",15]],["result",4,[["datastoreerror",4]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"AquamarineApiError"],[4,"DataStoreError"],[8,"AquaRuntime"],[3,"VmConfig"],[3,"AVMConfig"],[3,"AVM"],[3,"AquamarineBackend"],[3,"Plumber"],[3,"AquamarineApi"],[3,"VmPoolConfig"],[3,"ParticleDataStore"],[3,"ParticleEffects"],[3,"InterpretationStats"],[3,"NetworkEffects"],[13,"ParticleExpired"],[13,"OneshotCancelled"],[13,"AquamarineDied"],[13,"ExecutionTimedOut"],[13,"AquamarineQueueFull"],[13,"CreateDataStore"],[13,"VaultError"],[13,"StoreData"],[13,"CleanupData"]]},\
"async_unlock":{"doc":"This crate describes functions to work with async_std’s …","t":[5,5],"n":["unlock","unlock_f"],"q":["async_unlock",""],"d":["Performs computation on a value inside Mutex, unlocking …","Performs async computation on a value inside Mutex This …"],"i":[0,0],"f":[[[["mutex",3]]],[[["mutex",3]]]],"p":[]},\
"builtins":{"doc":"","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"builtins_deployer":{"doc":"","t":[7,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ALLOWED_ENV_PREFIX","BuiltinsDeployer","borrow","borrow_mut","deploy_builtin_services","deref","deref_mut","drop","from","init","into","new","try_from","try_into","type_id","vzip"],"q":["builtins_deployer","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,[[]],[[]],[[],["result",6]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["peerid",3],["peerid",3],["aquamarineapi",3],["pathbuf",3],["duration",3],["bool",15],["u16",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"BuiltinsDeployer"]]},\
"config_utils":{"doc":"","t":[5,5,5,5,5,5,5],"n":["blueprint_dir","modules_dir","particles_dir","particles_vault_dir","services_dir","to_peer_id","workdir"],"q":["config_utils","","","","","",""],"d":["","","","","","",""],"i":[0,0,0,0,0,0,0],"f":[[[["path",3]],["pathbuf",3]],[[["path",3]],["pathbuf",3]],[[["path",3]],["pathbuf",3]],[[["path",3]],["pathbuf",3]],[[["path",3]],["pathbuf",3]],[[["keypair",4]],["peerid",3]],[[["path",3]],["pathbuf",3]]],"p":[]},\
"connected_client":{"doc":"","t":[4,4,3,13,13,13,11,11,11,11,11,11,12,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["ClientCommand","ClientEvent","ConnectedClient","NewConnection","Particle","Particle","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone_into","clone_into","connect_real","connect_to","connect_to_with_timeout","connect_with_keypair","connect_with_timeout","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","erased_serialize","erased_serialize","fmt","fmt","from","from","from","init","init","init","into","into","into","kad_timeout","kad_timeout","listen_for_n","local_vm","maybe_receive","new","node","node_address","particle_ttl","particle_ttl","receive","receive_args","send","send_particle","send_particle_ext","serialize","serialize","set_particle_ttl","short_timeout","short_timeout","timeout","timeout","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","wait_particle_args","particle","multiaddr","particle","peer_id","sender"],"q":["connected_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","connected_client::ClientCommand","connected_client::ClientEvent","","",""],"d":["Describes commands sent from client to relay node; also …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Wait for a particle with specified <code>particle_id</code>, and read …","","","","",""],"i":[0,0,0,1,2,1,3,2,1,3,2,1,3,2,1,2,1,0,3,3,3,3,3,3,2,1,3,3,2,1,2,1,3,2,1,2,1,2,1,3,2,1,3,2,1,3,2,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,1,3,3,3,3,3,2,1,3,2,1,3,2,1,3,2,1,3,2,1,3,4,5,6,5,6],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["clientcommand",4]],[[],["clientevent",4]],[[]],[[]],[[["usize",15]]],[[["multiaddr",3]],["result",6]],[[["multiaddr",3],["duration",3],["option",4,[["duration",3]]]],["result",6]],[[["multiaddr",3],["option",4,[["keypair",4]]]],["result",6]],[[["multiaddr",3],["option",4,[["keypair",4]]],["duration",3],["option",4,[["duration",3]]]],["result",6]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[],["duration",3]],null,[[["usize",15],["fn",8]],["default",8]],null,[[],["option",4,[["particle",3]]]],[[["client",3],["peerid",3],["multiaddr",3],["option",4,[["duration",3]]]]],null,null,[[],["duration",3]],null,[[],["result",6,[["particle",3]]]],[[],["result",6,[["vec",3,[["jvalue",4]]]]]],[[["particle",3]]],[[["hashmap",3,[["str",15],["jvalue",4]]]],["string",3]],[[["hashmap",3,[["str",15],["jvalue",4]]],["bool",15]],["string",3]],[[],["result",4]],[[],["result",4]],[[["duration",3]]],[[],["duration",3]],null,[[],["duration",3]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[],["result",6,[["vec",3,[["jvalue",4]]]]]],null,null,null,null,null],"p":[[4,"ClientEvent"],[4,"ClientCommand"],[3,"ConnectedClient"],[13,"Particle"],[13,"NewConnection"],[13,"Particle"]]},\
"connection_pool":{"doc":"","t":[4,13,13,3,3,3,8,13,13,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,12,11,11,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Command","Connect","Connected","ConnectionPoolApi","ConnectionPoolBehaviour","ConnectionPoolInlet","ConnectionPoolT","CountConnections","Dial","Disconnect","Disconnected","GetContact","IsConnected","LifecycleEvent","LifecycleEvents","Send","add_subscriber","addresses_of_peer","addresses_of_peer","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","connect","connect","connect","count_connections","count_connections","count_connections","dial","dial","dial","disconnect","disconnect","disconnect","fmt","fmt","fmt","fmt","from","from","from","from","from","get_contact","get_contact","get_contact","inject_address_change","inject_connected","inject_connected","inject_connection_closed","inject_connection_established","inject_connection_established","inject_dial_failure","inject_dial_failure","inject_disconnected","inject_disconnected","inject_event","inject_event","inject_expired_external_addr","inject_expired_listen_addr","inject_listen_failure","inject_listener_closed","inject_listener_error","inject_new_external_addr","inject_new_listen_addr","inject_new_listener","into","into","into","into","into","is_connected","is_connected","is_connected","lifecycle_events","lifecycle_events","new","new","new_handler","new_handler","outlet","poll","poll","send","send","send","send_timeout","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","addr","contact","contact","out","out","out","out","out","out","out","out","particle","peer_id","peer_id","to","0","0"],"q":["connection_pool","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","connection_pool::Command","","","","","","","","","","","","","","","connection_pool::LifecycleEvent",""],"d":["","","","","","","","","","","","","","","","","Subscribes given channel for all <code>LifecycleEvent</code>s","","","","","","","","","","","","","","","","","","Connect to the contact by all of its known addresses and …","","","Returns number of connected contacts","","","Dial <code>address</code>, and send contact back on success <code>None</code> means …","","","","","","","","","","","","","","","Returns contact for a given peer if it is known","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns whether given peer is connected or not","","","","","","","","","","","","Sends a particle to a connected contact. Returns whether …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,2,0,0,0,0,1,1,1,2,1,1,0,1,1,3,3,4,3,1,4,5,2,3,1,4,5,2,5,2,5,2,6,3,5,6,3,5,6,3,5,6,3,5,1,5,2,2,3,1,4,5,2,6,3,5,4,3,4,4,3,4,3,4,3,4,3,4,4,4,4,4,4,4,4,4,3,1,4,5,2,6,3,5,6,5,3,4,3,4,5,3,4,6,3,5,5,5,2,2,3,1,4,5,2,3,1,4,5,2,3,1,4,5,2,3,1,4,5,2,7,8,9,8,10,7,9,11,12,13,14,10,11,12,10,15,16],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["outlet",6,[["lifecycleevent",4]]]]],[[["peerid",3]],["vec",3,[["multiaddr",3]]]],[[["peerid",3]],["vec",3,[["multiaddr",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["connectionpoolapi",3]],[[],["lifecycleevent",4]],[[]],[[]],[[["contact",3]],["boxfuture",6,[["bool",15]]]],[[["contact",3],["oneshotoutlet",6,[["bool",15]]]]],[[["contact",3]],["boxfuture",6,[["bool",15]]]],[[],["boxfuture",6,[["usize",15]]]],[[["oneshotoutlet",6,[["usize",15]]]]],[[],["boxfuture",6,[["usize",15]]]],[[["multiaddr",3]],["boxfuture",6,[["option",4,[["contact",3]]]]]],[[["multiaddr",3],["oneshotoutlet",6,[["option",4,[["contact",3]]]]]]],[[["multiaddr",3]],["boxfuture",6,[["option",4,[["contact",3]]]]]],[[["contact",3]],["boxfuture",6,[["bool",15]]]],[[["contact",3],["oneshotoutlet",6,[["bool",15]]]]],[[["contact",3]],["boxfuture",6,[["bool",15]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["peerid",3]],["boxfuture",6,[["option",4,[["contact",3]]]]]],[[["peerid",3],["oneshotoutlet",6,[["option",4,[["contact",3]]]]]]],[[["peerid",3]],["boxfuture",6,[["option",4,[["contact",3]]]]]],[[["peerid",3],["connectionid",3],["connectedpoint",4],["connectedpoint",4]]],[[["peerid",3]]],[[["peerid",3]]],[[["peerid",3],["connectionid",3],["connectedpoint",4]]],[[["peerid",3],["connectionid",3],["connectedpoint",4],["option",4,[["vec",3]]]]],[[["peerid",3],["connectionid",3],["connectedpoint",4],["option",4,[["vec",3]]]]],[[["option",4,[["peerid",3]]],["dialerror",4]]],[[["option",4,[["peerid",3]]],["dialerror",4]]],[[["peerid",3]]],[[["peerid",3]]],[[["peerid",3],["connectionid",3]]],[[["peerid",3],["connectionid",3]]],[[["multiaddr",3]]],[[["listenerid",3],["multiaddr",3]]],[[["multiaddr",3],["multiaddr",3]]],[[["listenerid",3],["result",4,[["error",3]]]]],[[["listenerid",3],["error",8]]],[[["multiaddr",3]]],[[["listenerid",3],["multiaddr",3]]],[[["listenerid",3]]],[[]],[[]],[[]],[[]],[[]],[[["peerid",3]],["boxfuture",6,[["bool",15]]]],[[["peerid",3],["oneshotoutlet",6,[["bool",15]]]]],[[["peerid",3]],["boxfuture",6,[["bool",15]]]],[[],["boxstream",6,[["lifecycleevent",4]]]],[[],["boxstream",6,[["lifecycleevent",4]]]],[[["usize",15],["protocolconfig",3],["peerid",3],["option",4,[["connectionpoolmetrics",3]]]]],[[["connectionpoolbehaviour",3]]],[[]],[[]],null,[[["context",3]],["poll",4,[["networkbehaviouraction",4,[["oneshothandler",3,[["protocolconfig",3],["handlermessage",4],["handlermessage",4]]]]]]]],[[["context",3]],["poll",4,[["networkbehaviouraction",4]]]],[[["contact",3],["particle",3]],["boxfuture",6,[["bool",15]]]],[[["contact",3],["particle",3],["oneshotoutlet",6,[["bool",15]]]]],[[["contact",3],["particle",3]],["boxfuture",6,[["bool",15]]]],null,[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"Command"],[4,"LifecycleEvent"],[3,"ConnectionPoolBehaviour"],[3,"ConnectionPoolInlet"],[3,"ConnectionPoolApi"],[8,"ConnectionPoolT"],[13,"Dial"],[13,"Connect"],[13,"Disconnect"],[13,"Send"],[13,"IsConnected"],[13,"GetContact"],[13,"CountConnections"],[13,"LifecycleEvents"],[13,"Connected"],[13,"Disconnected"]]},\
"control_macro":{"doc":"","t":[14,14,14,14],"n":["get_return","measure","ok_get","unwrap_return"],"q":["control_macro","","",""],"d":["Retrieves value from <code>Some</code>, returns on <code>None</code>","","Takes option as an argument, unwraps if <code>Some</code>, exit …","Retrieves value from <code>Some</code>, returns on <code>None</code>"],"i":[0,0,0,0],"f":[null,null,null,null],"p":[]},\
"created_swarm":{"doc":"","t":[3,3,3,5,12,11,11,11,11,11,11,12,12,11,11,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,5,5,5,5,5,5,12,12,12,11,12,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BaseVmConfig","CreatedSwarm","SwarmConfig","aqua_vm_config","bootstraps","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builtins_dir","builtins_keypair","clone","clone_into","connectivity","create_swarm","create_swarm_with_runtime","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","init","init","init","into","into","into","keypair","listen_on","listen_on","make_swarms","make_swarms_with","make_swarms_with_builtins","make_swarms_with_cfg","make_swarms_with_keypair","make_swarms_with_mocked_vm","make_swarms_with_transport_and_mocked_vm","management_keypair","manager","multiaddr","new","outlet","peer_id","peer_id","pool_size","tmp_dir","tmp_dir","tmp_dir","to_owned","transport","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["created_swarm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,2,3,1,2,3,1,1,1,1,1,3,0,0,2,3,1,2,3,1,2,3,1,3,1,2,3,1,2,3,1,2,3,1,1,2,1,0,0,0,0,0,0,0,3,2,3,1,3,2,3,1,2,3,1,1,1,2,3,1,2,3,1,2,3,1,2,3,1],"f":[null,null,null,[[["basevmconfig",3]]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["swarmconfig",3]],[[]],null,[[["swarmconfig",3]]],[[["swarmconfig",3]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,null,null,[[["usize",15]],["vec",3,[["createdswarm",3]]]],[[["usize",15],["bool",15]],["vec",3,[["createdswarm",3]]]],[[["usize",15],["path",3],["option",4,[["keypair",4]]]],["vec",3,[["createdswarm",3]]]],[[["usize",15]],["vec",3,[["createdswarm",3]]]],[[["usize",15],["keypair",4]],["vec",3,[["createdswarm",3]]]],[[["usize",15],["option",4,[["duration",3]]]],["vec",3,[["createdswarm",3]]]],[[["usize",15],["transport",4]],["vec",3,[["createdswarm",3]]]],null,null,null,[[["vec",3,[["multiaddr",3]]],["multiaddr",3]]],null,null,null,null,null,null,null,[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"SwarmConfig"],[3,"BaseVmConfig"],[3,"CreatedSwarm"]]},\
"ctrlc_adapter":{"doc":"","t":[5],"n":["block_until_ctrlc"],"q":["ctrlc_adapter"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"fluence_libp2p":{"doc":"","t":[13,13,3,3,4,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,14,14,11,11,11,11,11,11,11,11,11,0,14,14,0,11,11,0,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,5,5,5,5,5,5,6,6,6,6,6,6],"n":["Memory","Network","PeerId","RandomPeerId","Transport","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_memory_transport","build_transport","clone","clone","clone_into","clone_into","cmp","deserialize","eq","event_polling","event_polling","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_maddr","from_multihash","from_public_key","from_str","generate_swarm_event_type","generate_swarm_event_type","get_hash","hash","into","into","into","is_network","is_public_key","ne","partial_cmp","peerid_serializer","poll_loop","poll_loop","provider_serializer","random","random","random_multiaddr","remote_multiaddr","serialize","to_base58","to_bytes","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","types","vzip","vzip","vzip","deserialize","serialize","deserialize","serialize","create_memory_maddr","create_tcp_maddr","BackPressuredInlet","BackPressuredOutlet","Inlet","OneshotInlet","OneshotOutlet","Outlet"],"q":["fluence_libp2p","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fluence_libp2p::peerid_serializer","","fluence_libp2p::provider_serializer","","fluence_libp2p::random_multiaddr","","fluence_libp2p::types","","","","",""],"d":["","","Identifier of a peer of the network.","","","","","","","","","","","","","","","","","","","Intended to simplify simple polling functions that just …","Intended to simplify simple polling functions that just …","","","","","","","","","Parses a <code>PeerId</code> from bytes.","","Tries to turn a <code>Multihash</code> into a <code>PeerId</code>.","Builds a <code>PeerId</code> from a public key.","","Generates a type of events produced by Swarm by its name","Generates a type of events produced by Swarm by its name","","","","","","","Checks whether the public key passed as parameter matches …","","","","","","","Generates PeerId from random Ed25519 key","Generates a random peer ID from a cryptographically secure …","","Retrieves multiaddr of the remote peer","","Returns a base-58 encoded string of this <code>PeerId</code>.","Returns a raw bytes representation of this <code>PeerId</code>.","","","","","","","","","","","","","","","","","","","","","","","","","An input port of actor (aka Akka Inlet) with backpressure …","An output port of actor (aka Akka Outlet) with …","An unbounded input port of actor (aka Akka Inlet). Could …","A oneshot input port of actor (aka Akka Inlet). Could be …","A oneshot output port of actor (aka Akka Outlet). Could be …","An unbounded output port of actor (aka Akka Outlet). Could …"],"i":[1,1,0,0,0,2,3,1,2,3,1,2,0,0,1,2,1,2,2,1,2,0,0,1,2,2,3,1,2,2,2,2,1,2,2,2,0,0,2,2,3,1,2,1,2,2,2,0,0,0,0,3,2,0,0,1,2,2,1,2,2,3,1,2,2,2,3,1,2,3,1,2,0,3,1,2,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,[[],["multihash",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["keypair",4],["duration",3]],["boxed",3]],[[["transport",4],["keypair",4],["duration",3]],["boxed",3]],[[],["transport",4]],[[],["peerid",3]],[[]],[[]],[[["peerid",3]],["ordering",4]],[[],["result",4]],[[["peerid",3]],["bool",15]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["publickey",4]],["peerid",3]],[[["publickey",4]],["peerid",3]],[[]],[[],["result",4,[["peerid",3],["error",4]]]],[[["multiaddr",3]]],[[["multihash",3,[["uint",3,[["uint",3,[["uint",3,[["uint",3,[["uint",3,[["uint",3,[["uint",3,[["uterm",3],["b1",3]]],["b0",3]]],["b0",3]]],["b0",3]]],["b0",3]]],["b0",3]]],["b0",3]]]]]],["result",4,[["peerid",3],["multihash",3,[["uint",3,[["uint",3,[["uint",3,[["uint",3,[["uint",3,[["uint",3,[["uint",3,[["uterm",3],["b1",3]]],["b0",3]]],["b0",3]]],["b0",3]]],["b0",3]]],["b0",3]]],["b0",3]]]]]]]],[[["publickey",4]],["peerid",3]],[[["str",15]],["result",4,[["peerid",3]]]],null,null,[[],["u64",15]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["publickey",4]],["option",4,[["bool",15]]]],[[["peerid",3]],["bool",15]],[[["peerid",3]],["option",4,[["ordering",4]]]],null,null,null,null,[[],["peerid",3]],[[],["peerid",3]],null,[[["connectedpoint",4]],["multiaddr",3]],[[],["result",4]],[[],["string",3]],[[],["vec",3,[["u8",15],["global",3]]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[["multihash",3,[["uint",3,[["uint",3,[["uint",3,[["uint",3,[["uint",3,[["uint",3,[["uint",3,[["uterm",3],["b1",3]]],["b0",3]]],["b0",3]]],["b0",3]]],["b0",3]]],["b0",3]]],["b0",3]]]]]],["result",4,[["peerid",3]]]],[[["vec",3,[["u8",15],["global",3]]]],["result",4,[["peerid",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[],["result",4,[["peerid",3]]]],[[["peerid",3]],["result",4]],[[],["result",4,[["vec",3]]]],[[],["result",4]],[[],["multiaddr",3]],[[],["multiaddr",3]],null,null,null,null,null,null],"p":[[4,"Transport"],[3,"PeerId"],[3,"RandomPeerId"]]},\
"fs_utils":{"doc":"","t":[5,5,5,5,5,5,5,5,5,5,5,5],"n":["copy_dir_all","create_dir","create_dirs","file_name","file_stem","make_tmp_dir","make_tmp_dir_peer_id","remove_dir","remove_dirs","remove_file","set_write_only","to_abs_path"],"q":["fs_utils","","","","","","","","","","",""],"d":["","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0],"f":[[[],["result",6]],[[["",26,[["asref",8,[["path",3]]],["debug",8]]]],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",6,[["string",3]]]],[[],["result",6,[["string",3]]]],[[],["pathbuf",3]],[[["string",3]],["pathbuf",3]],[[["path",3]],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[["path",3]],["result",4,[["error",3]]]],[[["path",3]],["result",4,[["error",3]]]],[[["pathbuf",3]],["pathbuf",3]]],"p":[]},\
"ivalue_utils":{"doc":"","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,18,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Array","Array","Boolean","Boolean","ByteArray","ByteArray","F32","F32","F64","F64","I32","I32","I64","I64","IType","IValue","Record","Record","S16","S16","S32","S32","S64","S64","S8","S8","String","String","U16","U16","U32","U32","U64","U64","U8","U8","VARIANT_COUNT","VARIANT_COUNT","as_str","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","eq","eq","error","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","into","into","into_record","into_record_opt","into_string","ne","ne","ok","parse","serialize","to_bytes","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unit","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"],"q":["ivalue_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ivalue_utils::IType","","ivalue_utils::IValue","","","","","","","","","","","","","","","",""],"d":["An array of values of the same type.","A byte array.","Boolean.","Boolean value.","Specialization of arrays for byte vector.","Specialization of array type for byte vector.","A 32-bits float.","A 32-bits float.","A 64-bits float.","A 64-bits float.","A 32-bits integer (as defined in WebAssembly core).","A 32-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","Represents the types supported by WIT.","A WIT value.","A record contains record index from interfaces AST.","A record.","A 16-bits signed integer.","A 16-bits signed integer.","A 32-bits signed integer.","A 32-bits signed integer.","A 64-bits signed integer.","A 64-bits signed integer.","A 8-bits signed integer.","A 8-bits signed integer.","A string.","A string.","A 16-bits unsigned integer.","A 16-bits unsigned integer.","A 32-bits unsigned integer.","A 32-bits unsigned integer.","A 64-bits unsigned integer.","A 64-bits unsigned integer.","A 8-bits unsigned integer.","A 8-bits unsigned integer.","","","","","","","","","","","","","","","","Converts erroneous result of call_service into …","","","","","","","","","","","","","","","","","","","","Converts result of call_service into <code>IValue::Record</code>","Converts result of call_service into <code>IValue::Record</code>","","","","Converts successful result of call_service into …","","","","","","","","","","","","Converts empty result of call_service into <code>IValue::Record</code>","","","","","","","","","","","","","","","","","","",""],"i":[1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,1,2,1,2,1,2,1,2,2,1,1,2,0,1,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,2,0,0,0,1,2,0,1,1,1,1,2,1,2,1,2,1,2,0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["ivalue",4]],["option",4,[["str",15]]]],[[]],[[]],[[]],[[]],[[],["itype",4]],[[],["ivalue",4]],[[]],[[]],[[],["ivalue",4]],[[],["result",4,[["itype",4]]]],[[["itype",4]],["bool",15]],[[["ivalue",4]],["bool",15]],[[["jvalue",4]],["option",4,[["ivalue",4]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["f32",15]],["ivalue",4]],[[["u8",15]],["ivalue",4]],[[["i64",15]],["ivalue",4]],[[["i32",15]],["ivalue",4]],[[["vec",3,[["u8",15],["global",3]]]],["ivalue",4]],[[["u64",15]],["ivalue",4]],[[["i16",15]],["ivalue",4]],[[["u16",15]],["ivalue",4]],[[["i8",15]],["ivalue",4]],[[["string",3]],["ivalue",4]],[[]],[[["f64",15]],["ivalue",4]],[[["u32",15]],["ivalue",4]],[[]],[[]],[[]],[[["result",4,[["jvalue",4],["jvalue",4]]]],["option",4,[["ivalue",4]]]],[[["result",4,[["option",4,[["jvalue",4]]],["jvalue",4]]]],["option",4,[["ivalue",4]]]],[[["ivalue",4]],["option",4,[["string",3]]]],[[["itype",4]],["bool",15]],[[["ivalue",4]],["bool",15]],[[["jvalue",4]],["option",4,[["ivalue",4]]]],[[["parser",3]],["result",4,[["itype",4],["error",3]]]],[[],["result",4]],[[],["result",4,[["error",3]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["option",4,[["ivalue",4]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"IType"],[4,"IValue"],[13,"Array"],[13,"Record"],[13,"Boolean"],[13,"S8"],[13,"S16"],[13,"S32"],[13,"S64"],[13,"U8"],[13,"U16"],[13,"U32"],[13,"U64"],[13,"F32"],[13,"F64"],[13,"String"],[13,"ByteArray"],[13,"Array"],[13,"I32"],[13,"I64"],[13,"Record"]]},\
"json_utils":{"doc":"","t":[0,5,5,5,5,5],"n":["base64_serde","err_as_value","into_array","into_string","deserialize","serialize"],"q":["json_utils","","","","json_utils::base64_serde",""],"d":["","Converts an error into IValue::String","","","",""],"i":[0,0,0,0,0,0],"f":[null,[[["error",8]],["jvalue",4]],[[["jvalue",4]],["option",4,[["vec",3,[["jvalue",4]]]]]],[[["jvalue",4]],["option",4,[["string",3]]]],[[],["result",4,[["vec",3,[["u8",15]]]]]],[[["vec",3]],["result",4]]],"p":[]},\
"kademlia":{"doc":"","t":[13,13,13,4,13,3,3,3,8,3,4,13,13,13,13,13,13,11,10,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,10,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12],"n":["AddContact","Bootstrap","Cancelled","Command","DiscoverPeer","Kademlia","KademliaApi","KademliaApiInlet","KademliaApiT","KademliaConfig","KademliaError","LocalLookup","Neighborhood","NoKnownPeers","NoPeersFound","PeerBanned","Timeout","add_addresses","add_contact","add_contact","add_contact","add_kad_node","addresses_of_peer","addresses_of_peer","bootstrap","bootstrap","bootstrap","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","discover_peer","discover_peer","discover_peer","fmt","fmt","fmt","fmt","from","from","from","from","from","from","inject_address_change","inject_address_change","inject_connected","inject_connected","inject_connection_closed","inject_connection_closed","inject_connection_established","inject_connection_established","inject_dial_failure","inject_dial_failure","inject_disconnected","inject_disconnected","inject_event","inject_event","inject_event","inject_expired_external_addr","inject_expired_external_addr","inject_expired_listen_addr","inject_expired_listen_addr","inject_listen_failure","inject_listen_failure","inject_listener_closed","inject_listener_closed","inject_listener_error","inject_listener_error","inject_new_external_addr","inject_new_external_addr","inject_new_listen_addr","inject_new_listen_addr","inject_new_listener","inject_new_listener","into","into","into","into","into","into","kad_config","local_lookup","local_lookup","local_lookup","neighborhood","neighborhood","neighborhood","new","new","new_handler","new_handler","outlet","peer_id","poll","poll","remote_neighborhood","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","contact","count","key","out","out","out","out","peer","peer"],"q":["kademlia","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kademlia::Command","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,2,0,1,0,0,0,0,0,0,1,1,2,2,2,2,3,4,5,6,6,3,6,4,5,6,7,1,3,5,6,2,7,1,3,5,6,2,5,5,7,4,5,6,1,5,2,2,7,1,3,5,6,2,3,6,3,6,3,6,3,6,3,6,3,6,3,6,6,3,6,3,6,3,6,3,6,3,6,3,6,3,6,3,6,7,1,3,5,6,2,7,4,5,6,4,5,6,3,6,3,6,5,7,3,6,6,5,2,7,1,3,5,6,2,7,1,3,5,6,2,7,1,3,5,6,2,7,1,3,5,6,2,8,9,9,10,11,12,9,10,12],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["peerid",3],["vec",3,[["multiaddr",3]]]]],[[["contact",3]],["bool",15]],[[["contact",3]],["bool",15]],[[["contact",3]]],[[["peerid",3],["vec",3,[["multiaddr",3]]]]],[[["peerid",3]],["vec",3,[["multiaddr",3]]]],[[["peerid",3]],["vec",3,[["multiaddr",3]]]],[[],["boxfuture",6,[["result",4,[["kademliaerror",4]]]]]],[[],["boxfuture",6,[["result",4,[["kademliaerror",4]]]]]],[[["oneshotoutlet",6,[["result",4,[["kademliaerror",4]]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["kademliaapi",3]],[[]],[[]],[[["peerid",3]],["boxfuture",6,[["result",4,[["vec",3,[["multiaddr",3]]],["kademliaerror",4]]]]]],[[["peerid",3]],["boxfuture",6,[["result",4,[["vec",3,[["multiaddr",3]]],["kademliaerror",4]]]]]],[[["peerid",3],["oneshotoutlet",6,[["result",4,[["vec",3,[["multiaddr",3]]],["kademliaerror",4]]]]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["peerid",3],["connectionid",3],["connectedpoint",4],["connectedpoint",4]]],[[["peerid",3],["connectionid",3],["connectedpoint",4],["connectedpoint",4]]],[[["peerid",3]]],[[["peerid",3]]],[[["peerid",3],["connectionid",3],["connectedpoint",4]]],[[["peerid",3],["connectionid",3],["connectedpoint",4]]],[[["peerid",3],["connectionid",3],["connectedpoint",4],["option",4,[["vec",3]]]]],[[["peerid",3],["connectionid",3],["connectedpoint",4],["option",4,[["vec",3]]]]],[[["option",4,[["peerid",3]]],["dialerror",4]]],[[["option",4,[["peerid",3]]],["dialerror",4]]],[[["peerid",3]]],[[["peerid",3]]],[[["peerid",3],["connectionid",3]]],[[["kademliaevent",4]]],[[["peerid",3],["connectionid",3]]],[[["multiaddr",3]]],[[["multiaddr",3]]],[[["listenerid",3],["multiaddr",3]]],[[["listenerid",3],["multiaddr",3]]],[[["multiaddr",3],["multiaddr",3]]],[[["multiaddr",3],["multiaddr",3]]],[[["listenerid",3],["result",4,[["error",3]]]]],[[["listenerid",3],["result",4,[["error",3]]]]],[[["listenerid",3],["error",8]]],[[["listenerid",3],["error",8]]],[[["multiaddr",3]]],[[["multiaddr",3]]],[[["listenerid",3],["multiaddr",3]]],[[["listenerid",3],["multiaddr",3]]],[[["listenerid",3]]],[[["listenerid",3]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["peerid",3]],["boxfuture",6,[["result",4,[["vec",3,[["multiaddr",3]]],["kademliaerror",4]]]]]],[[["peerid",3]],["boxfuture",6,[["result",4,[["vec",3,[["multiaddr",3]]],["kademliaerror",4]]]]]],[[["peerid",3],["oneshotoutlet",6,[["vec",3,[["multiaddr",3]]]]]]],[[["multihash",6],["usize",15]],["boxfuture",6,[["result",4,[["vec",3,[["peerid",3]]],["kademliaerror",4]]]]]],[[["multihash",6],["usize",15]],["boxfuture",6,[["result",4,[["vec",3,[["peerid",3]]],["kademliaerror",4]]]]]],[[["multihash",6],["usize",15],["oneshotoutlet",6,[["result",4,[["vec",3,[["peerid",3]]],["kademliaerror",4]]]]]]],[[["kademlia",3]]],[[["kademliaconfig",3],["option",4,[["metrics",3]]]]],[[]],[[]],null,null,[[["context",3]],["poll",4,[["networkbehaviouraction",4]]]],[[["context",3]],["poll",4,[["networkbehaviouraction",4]]]],[[["multihash",6],["oneshotoutlet",6,[["result",4,[["vec",3,[["peerid",3]]],["kademliaerror",4]]]]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null],"p":[[4,"Command"],[4,"KademliaError"],[3,"KademliaApiInlet"],[8,"KademliaApiT"],[3,"KademliaApi"],[3,"Kademlia"],[3,"KademliaConfig"],[13,"AddContact"],[13,"Neighborhood"],[13,"LocalLookup"],[13,"Bootstrap"],[13,"DiscoverPeer"]]},\
"local_vm":{"doc":"","t":[3,13,13,3,13,4,4,13,6,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,5,5,11,11,12,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,12,12,12,12],"n":["AVM","Call","CleanupData","ClientFunctionsResult","CreateDataStore","DataStoreError","Instruction","Null","Returned","Seq","StoreData","VaultError","add","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call","cleanup","cleanup_data","client_functions","create_runtime","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","host_call","init","init","init","init","into","into","into","into","into_air","into_effects","make_particle","make_vm","ne","new","outcome","read_args","returned","source","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wrap_script","0","0","0","0","1","0","0","1"],"q":["local_vm","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","local_vm::DataStoreError","","","","","local_vm::Instruction","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","Cleanup data that become obsolete.","","Creates <code>AVM</code> in background (on blocking threadpool)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create AVM with provided config.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,2,0,2,0,0,1,0,1,2,2,1,3,1,4,2,3,1,4,2,3,3,3,3,0,3,3,1,4,2,3,1,4,2,3,1,4,2,1,1,1,4,2,2,3,1,4,2,2,0,3,1,4,2,3,1,4,2,1,3,0,0,1,3,4,0,4,2,2,3,1,4,2,3,1,4,2,3,1,4,2,3,1,4,2,0,5,6,7,8,7,9,10,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["peerid",3],["string",3],["vec",3,[["u8",15],["global",3]]],["str",15],["hashmap",3,[["u32",15],["callserviceresult",3],["randomstate",3]]]],["result",4,[["avmoutcome",3]]]],[[["str",15],["hashmap",3,[["u32",15],["callserviceresult",3],["randomstate",3]]]],["result",4,[["avmoutcome",3],["avmerror",4]]]],[[["str",15]],["result",4]],[[["str",15]],["result",4,[["avmerror",4]]]],[[["hashmap",3],["args",3]],["clientfunctionsresult",3]],[[["waker",3]],["pin",3,[["box",3,[["future",8],["global",3]]]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["instruction",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[["vaulterror",4]],["datastoreerror",4]],[[]],[[["hashmap",3],["args",3]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["string",3]],[[["result",4,[["avmoutcome",3],["avmerror",4,[["datastoreerror",4]]]]],["particle",3]],["particleeffects",3]],[[["peerid",3],["hashmap",3],["string",3],["avm",3],["bool",15],["duration",3]],["particle",3]],[[["peerid",3]],["avm",3,[["datastoreerror",4]]]],[[["instruction",4]],["bool",15]],[[["avmconfig",3]],["result",4,[["avm",3],["avmerror",4]]]],null,[[["particle",3],["peerid",3],["avm",3]],["option",4,[["result",4,[["vec",3,[["jvalue",4]]],["vec",3,[["jvalue",4]]]]]]]],null,[[],["option",4,[["error",8]]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[["string",3],["hashmap",3],["bool",15],["option",4,[["peerid",3]]]],["string",3]],null,null,null,null,null,null,null,null],"p":[[4,"Instruction"],[4,"DataStoreError"],[3,"AVM"],[3,"ClientFunctionsResult"],[13,"CreateDataStore"],[13,"VaultError"],[13,"StoreData"],[13,"CleanupData"],[13,"Seq"],[13,"Call"]]},\
"log_utils":{"doc":"","t":[5],"n":["enable_logs"],"q":["log_utils"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"now_millis":{"doc":"","t":[5,5,5],"n":["now","now_ms","now_sec"],"q":["now_millis","",""],"d":["Returns UNIX timestamp as Duration","Returns UNIX timestamp in milliseconds","Returns UNIX timestamp in seconds"],"i":[0,0,0],"f":[[[],["duration",3]],[[],["u128",15]],[[],["u64",15]]],"p":[]},\
"particle_args":{"doc":"","t":[12,4,3,4,13,13,13,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12],"n":["0","AVMError","Args","ArgsError","DataStoreError","InterpreterFailed","InvalidFormat","JError","MissingField","NonUnaryOption","RunnerError","SerdeJson","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_base58","function_args","function_name","init","init","init","init","into","into","into","into","new","next","next_opt","service_id","source","tetraplets","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","0","0","0","err","err","field","field","field","length"],"q":["particle_args","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","particle_args::AVMError","","","particle_args::ArgsError","","","","","",""],"d":["","","Arguments passed by VM to host on call_service","","This errors are encountered from a data store object.","This error contains interpreter outcome in case when …","","An error that can be created from any other error …","","","This errors are encountered from an AVM runner.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Retrieves next json value from iterator, parse it to T …","Retrieves a json value from iterator if it’s not empty, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,0,0,0,2,2,3,0,3,3,2,3,4,3,1,2,4,3,1,2,4,1,4,1,4,3,1,2,4,3,1,2,4,3,1,2,4,3,3,1,1,2,2,4,3,1,1,1,2,2,2,0,4,4,4,3,1,2,4,3,1,2,1,4,4,4,2,4,4,1,3,1,2,4,4,3,1,2,4,3,1,2,4,3,1,2,5,6,7,8,9,10,9,10,11,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["args",3]],[[],["jerror",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[["never",15]]],[[]],[[],["avmerror",4]],[[["never",15]]],[[["str",15]],["result",4,[["vec",3,[["u8",15]]],["argserror",4]]]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4,[["deserialize",8],["argserror",4]]]],[[["str",15]],["result",4,[["option",4,[["deserialize",8]]],["argserror",4]]]],null,[[],["option",4,[["error",8]]]],null,[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["callrequestparams",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null],"p":[[3,"JError"],[4,"AVMError"],[4,"ArgsError"],[3,"Args"],[13,"InterpreterFailed"],[13,"RunnerError"],[13,"DataStoreError"],[13,"MissingField"],[13,"SerdeJson"],[13,"InvalidFormat"],[13,"NonUnaryOption"]]},\
"particle_builtins":{"doc":"","t":[3,3,12,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11],"n":["Builtins","NodeInfo","air_version","borrow","borrow","borrow_mut","borrow_mut","builtins_management_peer_id","call","call","clone","clone","clone_into","clone_into","connectivity","deref","deref","deref_mut","deref_mut","drop","drop","erased_serialize","external_addresses","fmt","fmt","from","from","init","init","into","into","management_peer_id","modules","new","node_info","node_version","script_storage","serialize","services","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["particle_builtins","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,2,2,2,2,1,2,1,2,2,1,2,1,2,1,1,1,2,1,2,1,2,1,2,1,2,2,2,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1],"f":[null,null,null,[[]],[[]],[[]],[[]],null,[[["args",3],["particleparams",3]]],[[["args",3],["particleparams",3]],["particlefunctionoutput",6]],[[],["builtins",3]],[[],["nodeinfo",3]],[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,[[["scriptstorageapi",3],["nodeinfo",3],["servicesconfig",3]]],null,null,null,[[],["result",4]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"NodeInfo"],[3,"Builtins"]]},\
"particle_execution":{"doc":"","t":[13,13,13,13,4,13,13,13,8,8,6,8,3,3,4,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,12],"n":["CleanupVault","CreateVault","Empty","Err","FunctionOutcome","InitializeVault","NotDefined","Ok","ParticleFunction","ParticleFunctionMut","ParticleFunctionOutput","ParticleFunctionStatic","ParticleParams","ParticleVault","VaultError","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","branch","call","call","call_mut","cleanup","clone","clone","clone","clone_from","clone_into","clone_into","clone_into","create","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_output","from_residual","from_residual","id","init","init","init","init","init_peer_id","initialize","into","into","into","into","is_defined","new","particle_vault","script","signature","source","timestamp","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","vault_dir","vzip","vzip","vzip","vzip","0","0","args","params","0","0","0"],"q":["particle_execution","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","particle_execution::FunctionOutcome","","","","particle_execution::VaultError","",""],"d":["","","","","","","","","","","","","Lightweight, static version of the [Particle] structure It …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns false if variant is [NotDefined]","","","","","","Unix timestamp in milliseconds","","","","","","","","","","","","","TTL in milliseconds","","","","","","","","","","","","","","","",""],"i":[1,1,2,2,0,1,2,2,0,0,0,0,0,0,0,2,3,4,1,2,3,4,1,2,5,6,7,4,2,3,4,3,2,3,4,4,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,1,2,2,2,3,4,1,2,2,2,3,2,3,4,1,3,4,2,3,4,1,2,4,4,3,3,1,3,2,3,4,1,2,3,4,1,2,3,4,1,3,2,3,4,1,4,2,3,4,1,8,9,10,10,11,12,13],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["controlflow",4]],[[["args",3],["particleparams",3]],["output",6]],[[["args",3],["particleparams",3]],["output",6]],[[["args",3],["particleparams",3]],["output",6]],[[["str",15]],["result",4,[["vaulterror",4]]]],[[],["functionoutcome",4]],[[],["particleparams",3]],[[],["particlevault",3]],[[["particle",3]]],[[]],[[]],[[]],[[["str",15]],["result",4,[["vaulterror",4]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["never",15]]],[[]],[[]],[[]],[[]],[[["jerror",3]]],[[["result",4,[["infallible",4]]]]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[],["result",4,[["vaulterror",4]]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[["pathbuf",3]]],[[["str",15]],["pathbuf",3]],null,null,[[],["option",4,[["error",8]]]],null,[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],null,null,null,null,null,null,null],"p":[[4,"VaultError"],[4,"FunctionOutcome"],[3,"ParticleParams"],[3,"ParticleVault"],[8,"ParticleFunction"],[8,"ParticleFunctionStatic"],[8,"ParticleFunctionMut"],[13,"Ok"],[13,"Err"],[13,"NotDefined"],[13,"InitializeVault"],[13,"CreateVault"],[13,"CleanupVault"]]},\
"particle_modules":{"doc":"","t":[3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,4,13,13,13,3,3,13,13,13,13,13,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,5,11,11,5,12,12,12,12,12,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AddBlueprint","AddModule","BlueprintNotFound","BlueprintNotFoundInVault","ConfigNotFoundInVault","EmptyDependenciesList","FacadeShouldBeHash","IncorrectBlueprint","IncorrectModuleConfig","IncorrectVaultBlueprint","IncorrectVaultModuleConfig","InvalidBlueprintPath","InvalidModuleConfigPath","InvalidModuleName","InvalidModulePath","InvalidModuleReference","MaxHeapSizeOverflow","ModuleConfig","ModuleConvertError","ModuleError","ModuleInvalidBase64","ModuleNotFound","ModuleNotFoundInVault","ModuleRepository","NamedModuleConfig","NoModuleConfig","NoSuchBlueprint","ReadModuleInterfaceError","SerializeConfig","VaultDoesNotExist","WASIConfig","WriteBlueprint","WriteConfig","add_blueprint","add_module_base64","add_module_from_vault","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","config","default","default","default","dependencies","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","envs","erased_serialize","erased_serialize","erased_serialize","erased_serialize","file_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_blueprints","get_facade_interface","get_interface","get_interface_by_hash","init","init","init","init","init","init","into","into","into","into","into","into","list_files","list_modules","load_blueprint","load_blueprint_from_vault","load_module_config_from_vault","load_module_descriptor","logger_enabled","logging_mask","mapped_dirs","max_heap_size","mem_pages_count","mounted_binaries","name","name","new","new","preopened_files","resolve_blueprint","serialize","serialize","serialize","serialize","source","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","wasi","0","blueprint_path","blueprint_path","blueprint_path","config_path","config_path","config_path","err","err","err","err","err","err","err","err","err","err","err","err","err","err","err","err","err","err","err","err","id","id","id","max_heap_size_allowed","max_heap_size_wanted","module_path","module_path","path","path","path","path","path","path","path","reference","vault_path"],"q":["particle_modulesparticle_modules::ModuleError","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Saves new blueprint to disk","Adds a module to the filesystem, overwriting existing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get available blueprints","","","","","","","","","","","","","","","","List files in directory","","Load blueprint from disk","","","Load ModuleDescriptor from disk for a given module name","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,0,0,1,1,1,1,1,0,1,1,2,2,2,1,3,2,4,5,6,1,3,2,4,5,6,3,2,4,5,6,3,2,4,5,6,4,4,5,6,3,1,3,2,4,5,6,1,3,2,4,5,6,3,4,5,6,1,3,2,4,5,6,6,3,4,5,6,4,1,1,3,2,4,5,6,1,1,3,2,4,5,6,2,2,2,2,1,3,2,4,5,6,1,3,2,4,5,6,0,2,0,2,2,0,5,5,6,5,5,5,3,4,3,2,6,2,3,4,5,6,1,3,2,4,5,6,1,1,3,2,4,5,6,1,3,2,4,5,6,1,3,2,4,5,6,1,3,2,4,5,6,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,11,27,12,13,8,9,10,28,29,30,31,31,26,27,14,16,17,19,21,23,24,32,33],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["addblueprint",3]],["result",4,[["string",3],["moduleerror",4]]]],[[["string",3],["tomlfaasnamedmoduleconfig",3]],["result",4,[["string",3],["moduleerror",4]]]],[[["string",3],["tomlfaasnamedmoduleconfig",3],["particleparams",3]],["result",4,[["string",3],["moduleerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["addblueprint",3]],[[],["modulerepository",3]],[[],["tomlfaasnamedmoduleconfig",3]],[[],["tomlfaasmoduleconfig",3]],[[],["tomlwasiconfig",3]],[[]],[[]],[[]],[[]],[[]],null,[[],["tomlfaasnamedmoduleconfig",3]],[[],["tomlfaasmoduleconfig",3]],[[],["tomlwasiconfig",3]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4,[["tomlfaasnamedmoduleconfig",3]]]],[[],["result",4,[["tomlfaasmoduleconfig",3]]]],[[],["result",4,[["tomlwasiconfig",3]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["decodeerror",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vec",3,[["blueprint",3]]]],[[["str",15]],["result",4,[["jvalue",4],["moduleerror",4]]]],[[["str",15]],["result",4,[["jvalue",4],["jerror",3]]]],[[["hash",3]],["result",4,[["jvalue",4],["moduleerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["path",3]],["option",4]],[[],["result",4,[["jvalue",4],["jerror",3]]]],[[["path",3],["str",15]],["result",4,[["blueprint",3],["moduleerror",4]]]],[[["string",3],["particleparams",3]],["result",4,[["addblueprint",3],["moduleerror",4]]]],[[["string",3],["particleparams",3]],["result",4,[["tomlfaasnamedmoduleconfig",3],["moduleerror",4]]]],[[["path",3],["hash",3]],["result",4,[["moduledescriptor",3],["moduleerror",4]]]],null,null,null,null,null,null,null,null,[[["string",3],["vec",3,[["dependency",4]]]]],[[["path",3],["path",3],["path",3],["option",4,[["bytesize",3]]],["option",4,[["bytesize",3]]]]],null,[[["str",15]],["result",4,[["vec",3,[["moduledescriptor",3]]],["moduleerror",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["option",4,[["error",8]]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"ModuleError"],[3,"ModuleRepository"],[3,"AddBlueprint"],[3,"NamedModuleConfig"],[3,"ModuleConfig"],[3,"WASIConfig"],[13,"InvalidModuleName"],[13,"InvalidBlueprintPath"],[13,"BlueprintNotFoundInVault"],[13,"IncorrectVaultBlueprint"],[13,"InvalidModuleConfigPath"],[13,"ConfigNotFoundInVault"],[13,"IncorrectVaultModuleConfig"],[13,"AddModule"],[13,"SerializeConfig"],[13,"WriteConfig"],[13,"NoSuchBlueprint"],[13,"IncorrectBlueprint"],[13,"NoModuleConfig"],[13,"IncorrectModuleConfig"],[13,"WriteBlueprint"],[13,"ModuleConvertError"],[13,"ModuleNotFound"],[13,"ReadModuleInterfaceError"],[13,"ModuleInvalidBase64"],[13,"InvalidModulePath"],[13,"ModuleNotFoundInVault"],[13,"BlueprintNotFound"],[13,"EmptyDependenciesList"],[13,"FacadeShouldBeHash"],[13,"MaxHeapSizeOverflow"],[13,"InvalidModuleReference"],[13,"VaultDoesNotExist"]]},\
"particle_node":{"doc":"","t":[13,13,13,4,3,13,13,13,13,13,13,4,13,13,13,3,3,13,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5],"n":["AddContact","Bootstrap","Connect","ConnectionPoolCommand","Connectivity","CountConnections","Dial","Disconnect","DiscoverPeer","GetContact","IsConnected","KademliaCommand","LifecycleEvents","LocalLookup","Neighborhood","NetworkBehaviour","Node","Send","addresses_of_peer","as_ref","as_ref","bootstrap_frequency","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtins","builtins_management_peer_id","clone","clone_into","config","connection_pool","connectivity","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","discover_peer","dispatcher","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","init","init","init","init","init","inject_address_change","inject_connected","inject_connection_closed","inject_connection_established","inject_dial_failure","inject_disconnected","inject_event","inject_event","inject_event","inject_event","inject_expired_external_addr","inject_expired_listen_addr","inject_listen_failure","inject_listener_closed","inject_listener_error","inject_new_external_addr","inject_new_listen_addr","inject_new_listener","into","into","into","into","into","kademlia","kademlia_bootstrap","listen","local_peer_id","metrics","new","new","new_handler","peer_id","poll","reconnect_bootstraps","resolve_contact","send","start","start","swarm","swarm","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with","addr","contact","contact","out","out","out","out","out","out","out","out","particle","peer_id","peer_id","to","contact","count","key","out","out","out","out","peer","peer","create_args"],"q":["particle_node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","particle_node::ConnectionPoolCommand","","","","","","","","","","","","","","","particle_node::KademliaCommand","","","","","","","","","particle_node::config"],"d":["","","","","This structure is just a composition of Kademlia and …","","","","","","","","","","","Coordinates protocols, so they can cooperate","","","","","","Bootstrap will be executed after [1, N, 2<em>N, 3</em>N, …] …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Discover a peer via Kademlia","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Run kademlia bootstrap after first bootstrap is connected, …","Starts node service listener.","","","","","","","","Dial bootstraps, and then re-dial on each disconnection","","","Starts node service","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,2,0,0,2,2,2,1,2,2,0,2,1,1,0,0,2,3,4,4,4,4,1,2,5,4,3,1,2,5,4,3,5,5,4,4,0,4,5,1,2,5,4,3,1,2,5,4,3,4,5,1,2,5,4,3,1,2,1,2,5,4,3,1,2,5,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,2,5,4,3,4,4,5,5,4,5,3,3,4,3,4,4,4,5,4,5,5,4,1,2,5,4,3,1,2,5,4,3,1,2,5,4,3,1,2,5,4,3,5,6,7,8,7,9,6,8,10,11,12,13,9,10,11,9,14,15,15,16,17,18,15,16,18,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["peerid",3]],["vec",3,[["multiaddr",3]]]],[[],["kademliaapi",3]],[[],["connectionpoolapi",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["connectivity",3],["vec",3,[["multiaddr",3]]],["servicesconfig",3],["scriptstorageapi",3]],["builtins",3,[["connectivity",3]]]],null,[[],["connectivity",3]],[[]],null,null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["peerid",3]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["peerid",3],["connectionid",3],["connectedpoint",4],["connectedpoint",4]]],[[["peerid",3]]],[[["peerid",3],["connectionid",3],["connectedpoint",4]]],[[["peerid",3],["connectionid",3],["connectedpoint",4],["option",4,[["vec",3]]]]],[[["option",4,[["peerid",3]]],["dialerror",4]]],[[["peerid",3]]],[[["peerid",3],["connectionid",3]]],[[["identifyevent",4]]],[[["pingevent",3]]],[[]],[[["multiaddr",3]]],[[["listenerid",3],["multiaddr",3]]],[[["multiaddr",3],["multiaddr",3]]],[[["listenerid",3],["result",4,[["error",3]]]]],[[["listenerid",3],["error",8]]],[[["multiaddr",3]]],[[["listenerid",3],["multiaddr",3]]],[[["listenerid",3]]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[],["result",4,[["transporterror",4,[["error",3]]]]]],null,null,[[["resolvedconfig",3],["str",15]],["result",6,[["box",3]]]],[[["networkconfig",3]]],[[]],null,[[["context",3]],["poll",4,[["networkbehaviouraction",4]]]],[[]],[[["peerid",3],["str",15]]],[[["contact",3],["particle",3]]],[[["box",3]],["result",6,[["oneshotoutlet",6]]]],[[],["tasks",3]],[[["peerid",3],["networkconfig",3],["boxed",3],["vec",3,[["multiaddr",3]]]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[["backpressuredinlet",6,[["particle",3]]],["inlet",6,[["result",4,[["networkeffects",3],["aquamarineapierror",4]]]]],["swarm",3,[["networkbehaviour",3]]],["connectivity",3],["dispatcher",3],["aquamarinebackend",3,[["arc",3,[["builtins",3,[["connectivity",3]]]]]]],["scriptstoragebackend",3],["builtinsdeployer",3],["option",4,[["registry",3]]],["socketaddr",4],["peerid",3],["peerid",3]],["box",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["vec",3,[["arg",3]]]]],"p":[[4,"KademliaCommand"],[4,"ConnectionPoolCommand"],[3,"NetworkBehaviour"],[3,"Connectivity"],[3,"Node"],[13,"Dial"],[13,"Connect"],[13,"Disconnect"],[13,"Send"],[13,"IsConnected"],[13,"GetContact"],[13,"CountConnections"],[13,"LifecycleEvents"],[13,"AddContact"],[13,"Neighborhood"],[13,"LocalLookup"],[13,"Bootstrap"],[13,"DiscoverPeer"]]},\
"particle_protocol":{"doc":"","t":[4,3,4,13,13,13,13,13,13,17,3,13,3,4,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,11,11,12,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,12,12,12,12,12],"n":["CompletionChannel","Contact","HandlerMessage","Ignore","InParticle","InboundUpgradeError","InboundUpgradeError","Oneshot","OutParticle","PROTOCOL_NAME","Particle","Particle","ProtocolConfig","ProtocolMessage","Upgrade","Upgrade","addresses","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","data","deadline","default","default","default","deserialize","deserialize","deserialize","deserialize","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","id","init_peer_id","into","into","into","into","into","into","into_protocol_message","is_expired","keep_alive_timeout","ne","ne","new","new","outbound_substream_timeout","outlet","peer_id","protocol_info","protocol_info","script","serialize","serialize","serialize","signature","time_to_live","timestamp","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","ttl","type_id","type_id","type_id","type_id","type_id","type_id","upgrade_inbound","upgrade_outbound","upgrade_timeout","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","1","0","0"],"q":["particle_protocol","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","particle_protocol::CompletionChannel","particle_protocol::HandlerMessage","","","","particle_protocol::ProtocolMessage",""],"d":["","","","","Particle being received from a remote peer. Receive-only, …","Error while receiving a message","Error while receiving a message","","Particle being sent to remote peer. Contains a channel to …","","","","","","Dummy plug. Generated by the <code>OneshotHandler</code> when Inbound …","","","","","","","","","","","","","","","","","","","","","","","base64-encoded","Deadline in milliseconds","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Keep-alive timeout for idle connections.","","","","","Timeout for outbound substream upgrades.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Timeout for applying the given upgrade on a substream","","","","","","","","","","","","",""],"i":[0,0,0,1,2,2,3,1,2,0,0,3,0,0,2,3,4,1,2,3,5,4,6,1,2,3,5,4,6,3,5,4,6,3,5,4,6,6,6,1,5,6,3,5,4,6,3,6,1,2,3,3,5,4,4,6,6,1,2,2,2,3,5,4,6,6,6,1,2,3,5,4,6,2,6,5,3,6,5,4,5,1,4,2,5,6,3,4,6,6,6,6,3,5,4,6,3,4,6,1,2,3,5,4,6,1,2,3,5,4,6,6,1,2,3,5,4,6,5,2,5,1,2,3,5,4,6,7,8,9,10,8,11,12],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["protocolmessage",4]],[[],["protocolconfig",3]],[[],["contact",3]],[[],["particle",3]],[[]],[[]],[[]],[[]],null,[[],["option",4,[["u64",15]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["protocolmessage",4]],["bool",15]],[[["particle",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["protocolmessage",4]],["handlermessage",4]],[[],["handlermessage",4]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[["protocolmessage",4]],["bool",15]],[[["particle",3]],["bool",15]],[[["duration",3],["duration",3],["duration",3]]],[[["peerid",3],["vec",3,[["multiaddr",3]]]]],null,[[],["option",4,[["oneshotoutlet",6,[["bool",15]]]]]],null,[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["duration",3]],null,[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null],"p":[[4,"CompletionChannel"],[4,"HandlerMessage"],[4,"ProtocolMessage"],[3,"Contact"],[3,"ProtocolConfig"],[3,"Particle"],[13,"Oneshot"],[13,"OutParticle"],[13,"InParticle"],[13,"InboundUpgradeError"],[13,"Particle"],[13,"InboundUpgradeError"]]},\
"particle_services":{"doc":"","t":[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,4,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,18,18,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AliasAsServiceId","ArgParseError","Array","Array","Boolean","Boolean","ByteArray","ByteArray","CorruptedFaaSInterface","CreateServicesDir","DeserializePersistedService","Engine","F32","F32","F64","F64","Forbidden","I32","I32","I64","I64","IType","IValue","ModuleError","NoSuchAlias","NoSuchService","NoSuchServiceWithFunction","ParticleAppServices","ReadPersistedService","Record","Record","S16","S16","S32","S32","S64","S64","S8","S8","ServiceError","String","String","U16","U16","U32","U32","U64","U64","U8","U8","VARIANT_COUNT","VARIANT_COUNT","VaultError","VaultLink","add_alias","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_service","clone","clone","clone","clone_into","clone_into","clone_into","create_service","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","eq","eq","equivalent","erased_serialize","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_hash","get_interface","hash","init","init","init","init","into","into","into","into","list_services","ne","ne","new","parse","remove_service","resolve_alias","serialize","source","to_bytes","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","err","err","err","err","function","function","particle_id","path","path","path","reason","service","service_id","user"],"q":["particle_services","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","particle_services::IType","","particle_services::IValue","","","","","","","","","","","","","","","","","particle_services::ServiceError","","","","","","","","","","","","","","","","","","","","",""],"d":["","","An array of values of the same type.","A byte array.","Boolean.","Boolean value.","Specialization of arrays for byte vector.","Specialization of array type for byte vector.","","","","","A 32-bits float.","A 32-bits float.","A 64-bits float.","A 64-bits float.","","A 32-bits integer (as defined in WebAssembly core).","A 32-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","A 64-bits integer (as defined in WebAssembly core).","Represents the types supported by WIT.","A WIT value.","","","","","","","A record contains record index from interfaces AST.","A record.","A 16-bits signed integer.","A 16-bits signed integer.","A 32-bits signed integer.","A 32-bits signed integer.","A 64-bits signed integer.","A 64-bits signed integer.","A 8-bits signed integer.","A 8-bits signed integer.","","A string.","A string.","A 16-bits unsigned integer.","A 16-bits unsigned integer.","A 32-bits unsigned integer.","A 32-bits unsigned integer.","A 64-bits unsigned integer.","A 64-bits unsigned integer.","A 8-bits unsigned integer.","A 8-bits unsigned integer.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,2,3,2,3,2,3,1,1,1,1,2,3,2,3,1,2,3,2,3,0,0,1,1,1,1,0,1,2,3,2,3,2,3,2,3,2,3,0,2,3,2,3,2,3,2,3,2,3,2,3,1,1,4,4,1,2,3,4,1,2,3,4,4,2,3,4,2,3,4,3,4,1,2,3,4,1,2,3,2,4,1,2,3,2,3,2,2,4,1,1,2,3,4,1,1,1,1,1,2,3,3,3,3,3,3,3,3,3,3,3,3,3,2,4,2,4,1,2,3,4,1,2,3,4,2,3,4,2,4,4,2,1,2,4,2,3,1,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,35,32,33,34,37,36,35,37],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["string",3],["string",3],["peerid",3]],["result",4,[["serviceerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["args",3],["particleparams",3]],["functionoutcome",4]],[[],["particleappservices",3]],[[],["itype",4]],[[],["ivalue",4]],[[]],[[]],[[]],[[["string",3],["peerid",3]],["result",4,[["string",3],["serviceerror",4]]]],[[],["ivalue",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4,[["itype",4]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["itype",4]],["bool",15]],[[["ivalue",4]],["bool",15]],[[],["bool",15]],[[["serializer",8]],["result",4,[["ok",3],["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["appserviceerror",4]]],[[["vaulterror",4]]],[[["argserror",4]]],[[["moduleerror",4]]],[[]],[[]],[[["f32",15]],["ivalue",4]],[[["u8",15]],["ivalue",4]],[[["f64",15]],["ivalue",4]],[[]],[[["string",3]],["ivalue",4]],[[["u16",15]],["ivalue",4]],[[["u64",15]],["ivalue",4]],[[["vec",3,[["u8",15],["global",3]]]],["ivalue",4]],[[["u32",15]],["ivalue",4]],[[["i32",15]],["ivalue",4]],[[["i64",15]],["ivalue",4]],[[["i16",15]],["ivalue",4]],[[["i8",15]],["ivalue",4]],[[],["u64",15]],[[["string",3]],["result",4,[["jvalue",4],["serviceerror",4]]]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[],["vec",3,[["jvalue",4]]]],[[["itype",4]],["bool",15]],[[["ivalue",4]],["bool",15]],[[["servicesconfig",3],["modulerepository",3]]],[[["parser",3]],["result",4,[["itype",4],["error",3]]]],[[["string",3],["peerid",3]],["result",4,[["serviceerror",4]]]],[[["string",3]],["result",4,[["string",3],["serviceerror",4]]]],[[],["result",4]],[[],["option",4,[["error",8]]]],[[],["result",4,[["error",3]]]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"ServiceError"],[4,"IType"],[4,"IValue"],[3,"ParticleAppServices"],[13,"Array"],[13,"Record"],[13,"Boolean"],[13,"S8"],[13,"S16"],[13,"S32"],[13,"S64"],[13,"U8"],[13,"U16"],[13,"U32"],[13,"U64"],[13,"F32"],[13,"F64"],[13,"String"],[13,"ByteArray"],[13,"Array"],[13,"I32"],[13,"I64"],[13,"Record"],[13,"NoSuchService"],[13,"NoSuchAlias"],[13,"AliasAsServiceId"],[13,"Engine"],[13,"ModuleError"],[13,"CorruptedFaaSInterface"],[13,"ArgParseError"],[13,"VaultError"],[13,"ReadPersistedService"],[13,"DeserializePersistedService"],[13,"CreateServicesDir"],[13,"VaultLink"],[13,"NoSuchServiceWithFunction"],[13,"Forbidden"]]},\
"peer_metrics":{"doc":"","t":[13,13,3,3,3,4,13,13,13,13,13,3,4,13,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Builtin","ConnectionFailed","ConnectionPoolMetrics","ConnectivityMetrics","DispatcherMetrics","FunctionKind","Kademlia","KademliaError","KademliaNotFound","Local","NotHappened","ParticleExecutorMetrics","Resolution","Service","VmPoolMetrics","alive_actors","bootstrap_connected","bootstrap_disconnected","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connected_peers","count_resolution","encode","encode","eq","eq","expired_particles","fmt","free_vms","from","from","from","from","from","from","from","get_vm","hash","hash","interpretation_failures","interpretation_successes","interpretation_time_sec","into","into","into","into","into","into","into","new","new","new","new","new","no_free_vm","normalized_interpretation_time_sec","particle_queue_size","particle_send_failure","particle_send_success","particle_sizes","pool_size","put_vm","received_particles","service_call","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","total_actors_mailbox","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["peer_metrics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,2,0,0,0,0,2,2,2,2,1,0,0,1,0,3,4,4,5,2,4,6,1,3,7,5,2,4,6,1,3,7,5,2,4,6,1,3,7,5,2,4,6,1,3,7,5,4,2,1,2,1,6,1,7,5,2,4,6,1,3,7,7,2,1,3,3,3,5,2,4,6,1,3,7,5,4,6,3,7,7,3,5,4,4,5,7,7,5,3,5,2,4,6,1,3,7,3,5,2,4,6,1,3,7,5,2,4,6,1,3,7,5,2,4,6,1,3,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["connectionpoolmetrics",3]],[[],["resolution",4]],[[],["connectivitymetrics",3]],[[],["dispatchermetrics",3]],[[],["functionkind",4]],[[],["particleexecutormetrics",3]],[[],["vmpoolmetrics",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["resolution",4]]],[[["write",8]],["result",4,[["error",3]]]],[[["write",8]],["result",4,[["error",3]]]],[[["resolution",4]],["bool",15]],[[["functionkind",4]],["bool",15]],null,[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["registry",3]]],[[["registry",3]]],[[["registry",3],["option",4,[["usize",15]]]]],[[["registry",3]]],[[["registry",3]]],null,null,null,null,null,null,null,null,null,[[["bool",15],["functionkind",4],["option",4,[["duration",3]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"FunctionKind"],[4,"Resolution"],[3,"ParticleExecutorMetrics"],[3,"ConnectivityMetrics"],[3,"ConnectionPoolMetrics"],[3,"DispatcherMetrics"],[3,"VmPoolMetrics"]]},\
"script_storage":{"doc":"","t":[13,13,13,3,3,3,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["InletError","OutletError","PermissionDenied","ScriptStorageApi","ScriptStorageBackend","ScriptStorageConfig","ScriptStorageError","add_script","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","list_scripts","max_failures","new","outlet","particle_ttl","peer_id","remove_script","start","timer_resolution","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["script_storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Script is deleted after this number of failures","","","ttl to set in generated particles","","","","Minimal interval of script execution","","","","","","","","","","","","","","","","","","",""],"i":[1,1,1,0,0,0,0,2,3,4,2,1,3,4,2,1,4,2,4,2,4,2,1,1,3,4,2,1,3,4,2,1,2,4,3,2,4,4,2,3,4,4,2,1,3,4,2,1,3,4,2,1,3,4,2,1,3,4,2,1],"f":[null,null,null,null,null,null,null,[[["string",3],["option",4,[["duration",3]]],["duration",3],["peerid",3]],["result",4,[["string",3],["scriptstorageerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["scriptstorageconfig",3]],[[],["scriptstorageapi",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["boxfuture",6,[["result",4,[["hashmap",3,[["scriptid",3],["script",3]]],["scriptstorageerror",4]]]]]],null,[[["connectionpoolapi",3],["inlet",6,[["string",3]]],["scriptstorageconfig",3]]],null,null,null,[[["string",3],["peerid",3],["bool",15]],["boxfuture",6,[["result",4,[["bool",15],["scriptstorageerror",4]]]]]],[[],["joinhandle",3]],null,[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]]],"p":[[4,"ScriptStorageError"],[3,"ScriptStorageApi"],[3,"ScriptStorageBackend"],[3,"ScriptStorageConfig"]]},\
"server_config":{"doc":"","t":[3,3,3,3,3,3,3,3,12,12,12,12,11,12,12,5,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,11,11,5,5,5,5,5,5,5,5,5,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,5,12,12,12,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,5,12,12,12,12,12,12,12,11,12,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,12,11,5,12,12,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],"n":["BootstrapConfig","KademliaConfig","NetworkConfig","NodeConfig","ResolvedConfig","ServicesConfig","TransportConfig","UnresolvedConfig","allow_local_addresses","allow_local_addresses","aquavm_max_heap_size","aquavm_pool_size","as_libp2p","autodeploy_particle_ttl","autodeploy_retry_attempts","avm_base_dir","ban_cooldown","blueprint_dir","bootstrap","bootstrap_config","bootstrap_delay","bootstrap_frequency","bootstrap_frequency","bootstrap_max_delay","bootstrap_nodes","bootstrap_nodes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builtins_base_dir","builtins_base_dir","builtins_key_pair","builtins_management_peer_id","cert_dir","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config_keys","connection_idle_timeout","connection_pool_metrics","connectivity_metrics","default","default","default_aquavm_pool_size","default_autodeploy_retry_attempts","default_base_dir","default_bootstrap_frequency","default_bootstrap_nodes","default_builtins_keypair","default_builtins_keypair_path","default_config_path","default_execution_timeout","default_heap_size","default_keypair_format","default_keypair_path","default_listen_ip","default_management_peer_id","default_metrics_enabled","default_metrics_port","default_particle_processor_parallelism","default_particle_queue_buffer_size","default_particle_ttl","default_processing_timeout","default_root_keypair","default_script_storage_max_failures","default_script_storage_particle_ttl","default_script_storage_timer_resolution","default_socket_timeout","default_tcp_port","default_transport","default_websocket_port","deref","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_config","dir_config","envs","external_address","external_addresses","external_multiaddresses","fmt","fmt","fmt","fmt","fmt","fmt","fmt","force_builtins_redeploy","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","kademlia","kademlia_config","key_pair","libp2p_metrics","listen_config","listen_multiaddrs","load_config","local_peer_id","local_peer_id","management_peer_id","management_peer_id","max_heap_size","max_packet_size","metrics_config","metrics_listen_addr","module_default_heap_size","module_max_heap_size","modules_dir","new","new","node_config","node_version","particle_execution_timeout","particle_processor_parallelism","particle_queue_buffer","particle_queue_buffer","particles_vault_dir","peer_fail_threshold","protocol_config","protocol_config","query_timeout","reconnect_delay","replication_factor","resolve","root_key_pair","root_weights","script_storage_max_failures","script_storage_particle_ttl","script_storage_timer_resolution","serialize","services_base_dir","services_dir","services_envs","socket_timeout","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transport","transport_config","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","workdir","zero","ALLOW_PRIVATE_IPS","AQUA_VM_POOL_SIZE","BLUEPRINT_DIR","BOOTSTRAP_FREQ","BOOTSTRAP_NODE","CERTIFICATE_DIR","CONFIG_FILE","EXTERNAL_ADDR","EXTERNAL_MULTIADDRS","LOCAL","MANAGEMENT_PEER_ID","METRICS_PORT","ROOT_KEY_PAIR_FORMAT","ROOT_KEY_PAIR_GENERATE","ROOT_KEY_PAIR_PATH","ROOT_KEY_PAIR_VALUE","SERVICES_WORKDIR","SERVICE_ENVS","TCP_PORT","WEBSOCKET_PORT"],"q":["server_configserver_config::config_keys","","","","","","","","","","","","","","","","","","",""],"d":["","see <code>libp2p_kad::KademliaConfig</code>","","","","","","","","","Maximum heap size in bytes available for an interpreter …","Number of stepper VMs to create. By default, …","","Particle ttl for autodeploy","Configure the number of ping attempts to check the …","","Period after which peer ban is lifted","Path of the blueprint directory containing blueprints and …","","","","","","","","Bootstrap nodes to join to the Fluence network","","","","","","","","","","","","","","","","","","","","key to manage builtins services initialization","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Default heap size in bytes available for the module unless …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opaque environment variables to be passed on each service …","External address to advertise via identify protocol","","External multiaddresses to advertise; more flexible that …","","","","","","","","Affects builtins autodeploy. If set to true, then all …","","","","","","","","","","","","","","","","","","","","","","","","","Peer id of the current node","","key that could manage services","Maximum heap size in bytes available for the module.","","","","Default heap size in bytes available for a WASM module …","Maximum heap size in bytes available for a WASM module.","Dir to store .wasm modules and their configs","","","","","","","","","Dir to store directories shared between services in the …","Number of times peer is failed to be discovered before it …","","","","","","","","","","","","","","Dir to persist info about running services","","Socket timeout for main transport","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Working dir for services","Creates config with all values to zero, so no delays. …","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,2,2,2,3,2,2,0,3,4,1,2,5,1,2,5,1,2,1,5,3,2,6,7,8,4,1,5,3,2,6,7,8,4,0,0,2,4,0,5,3,2,6,7,8,4,5,3,2,6,7,8,4,0,3,1,1,5,3,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,5,3,2,6,7,0,8,4,2,8,2,5,3,2,6,7,8,4,2,1,5,3,2,6,7,8,4,1,5,3,2,6,7,8,4,2,1,1,1,2,8,0,1,4,2,4,4,3,2,8,2,2,4,1,4,8,1,2,2,1,2,4,3,1,2,3,5,3,7,2,2,2,2,2,5,0,4,2,6,5,3,2,6,7,8,4,6,2,1,5,3,2,6,7,8,4,1,5,3,2,6,7,8,4,1,5,3,2,6,7,8,4,1,5,3,2,6,7,8,4,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[],["libp2pkadconfig",3]],null,null,[[["path",3]],["pathbuf",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["path",3]],["pathbuf",3]],[[["path",3]],["pathbuf",3]],null,null,[[["path",3]],["pathbuf",3]],[[],["bootstrapconfig",3]],[[],["kademliaconfig",3]],[[],["nodeconfig",3]],[[],["transportconfig",3]],[[],["unresolvedconfig",3]],[[],["resolvedconfig",3]],[[],["servicesconfig",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[],["usize",15]],[[],["u16",15]],[[],["pathbuf",3]],[[],["usize",15]],[[],["vec",3,[["multiaddr",3]]]],[[],["keypair",4]],[[],["pathorvalue",4]],[[],["pathbuf",3]],[[],["duration",3]],null,[[],["string",3]],[[],["pathorvalue",4]],[[],["ipaddr",4]],[[],["peerid",3]],[[],["bool",15]],[[],["u16",15]],[[],["option",4,[["usize",15]]]],[[],["usize",15]],[[],["duration",3]],[[],["duration",3]],[[],["keypair",4]],[[],["u8",15]],[[],["duration",3]],[[],["duration",3]],[[],["duration",3]],[[],["u16",15]],[[],["transport",4]],[[],["u16",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["argmatches",3]],["result",6,[["resolvedconfig",3]]]],null,null,null,[[],["vec",3,[["multiaddr",3]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["vec",3,[["multiaddr",3]]]],[[["argmatches",3]],["result",6,[["resolvedconfig",3]]]],null,null,null,null,null,null,null,[[],["socketaddr",4]],null,null,null,[[["option",4,[["metrics",3]]],["option",4,[["connectivitymetrics",3]]],["option",4,[["connectionpoolmetrics",3]]],["keypair",4],["resolvedconfig",3],["str",15]]],[[["peerid",3],["pathbuf",3],["pathbuf",3],["hashmap",3,[["vec",3,[["u8",15]]],["vec",3,[["u8",15]]]]],["peerid",3],["peerid",3],["option",4,[["bytesize",3]]],["option",4,[["bytesize",3]]]],["result",4,[["error",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["resolvedconfig",3]],null,null,null,null,null,[[],["result",4]],[[["path",3]],["pathbuf",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["bootstrapconfig",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[3,"NetworkConfig"],[3,"NodeConfig"],[3,"KademliaConfig"],[3,"ServicesConfig"],[3,"BootstrapConfig"],[3,"TransportConfig"],[3,"UnresolvedConfig"],[3,"ResolvedConfig"]]},\
"service_modules":{"doc":"","t":[3,4,3,13,13,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,5,5,5,5,5,5,5,5,5,12,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Blueprint","Dependency","Hash","Hash","Name","as_bytes","blueprint_file_name","blueprint_fname","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","dependencies","deserialize","deserialize","eq","extract_module_file_name","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_hex","get_facade_module","hash","hash","hash_dependencies","id","into","into","into","is_blueprint","is_module_wasm","is_service","load_module","module_config","module_config_name_hash","module_config_name_json","module_file_name","module_file_name_hash","name","ne","serialize","serialize","service_file_name","to_hex","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0"],"q":["service_modules","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","service_modules::Dependency",""],"d":["","","","","","","Calculates filename of the blueprint","","","","","","","","","","","","","","","","","","Return file name with .wasm extension stripped. None if …","","","","","","","","","","Construct Hash from raw hash value in hex; doesn’t hash …","","","Hash arbitrary bytes","","","","","","Returns true if file is named like a blueprint would be","","","","","Calculates filename of the config for a wasm module","Calculates filename of the config for a wasm module, given …","Calculates the name of a wasm module file, given a hash or …","Calculates the name of a wasm module file, given a hash of …","","","","","","Converts hash to hex str","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,1,1,2,0,0,3,1,2,3,1,2,3,1,2,3,1,2,3,3,1,2,0,3,1,1,2,2,3,1,2,2,2,3,2,2,0,3,3,1,2,0,0,0,0,0,0,0,0,0,3,2,3,1,0,2,3,1,2,1,2,3,1,2,3,1,2,3,1,2,3,1,2,4,5],"f":[null,null,null,null,null,[[]],[[["blueprint",3]],["string",3]],[[["str",15]],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["blueprint",3]],[[],["dependency",4]],[[],["hash",3]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[["hash",3]],["bool",15]],[[["path",3]],["option",4,[["str",15]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4,[["error",4]]]],[[],["option",4,[["dependency",4]]]],[[]],[[]],[[["hash",3],["vec",3,[["hash",3]]]],["hash",3]],null,[[]],[[]],[[]],[[["str",15]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["str",15]],["result",6,[["vec",3,[["u8",15]]]]]],[[["str",15]],["jvalue",4]],[[["hash",3]],["string",3]],[[["dependency",4]],["string",3]],[[["dependency",4]],["string",3]],[[["hash",3]],["string",3]],null,[[["hash",3]],["bool",15]],[[],["result",4]],[[],["result",4]],[[["str",15]],["string",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null],"p":[[4,"Dependency"],[3,"Hash"],[3,"Blueprint"],[13,"Hash"],[13,"Name"]]},\
"test_constants":{"doc":"","t":[7,7,7,7,7,7,7],"n":["EXECUTION_TIMEOUT","KAD_TIMEOUT","KEEP_ALIVE_TIMEOUT","PARTICLE_TTL","SHORT_TIMEOUT","TIMEOUT","TRANSPORT_TIMEOUT"],"q":["test_constants","","","","","",""],"d":["","","","","","In debug, VM startup time is big, account for that",""],"i":[0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null],"p":[]},\
"test_utils":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,5,12,12,5,5,11,11,11,11,11,11,11,11,11,11],"n":["CreatedService","RetStruct","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","connect_swarms","create_service","deref","deref","deref_mut","deref_mut","drop","drop","error","fmt","fmt","from","from","id","init","init","into","into","response_to_return","result","ret_code","string_result","timeout","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["test_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,2,1,2,0,0,1,2,1,2,1,2,2,1,2,1,2,1,1,2,1,2,0,2,2,0,0,1,2,1,2,1,2,1,2,1,2],"f":[null,null,[[]],[[]],[[]],[[]],[[],["createdservice",3]],[[],["retstruct",3]],[[]],[[]],[[["usize",15]]],[[["connectedclient",3],["str",15],["vec",3,[["u8",15]]]],["createdservice",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["ivalue",4]],["retstruct",3]],null,null,[[["retstruct",3]],["result",4,[["string",3],["string",3]]]],[[["duration",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"CreatedService"],[3,"RetStruct"]]},\
"toml_utils":{"doc":"","t":[5],"n":["table"],"q":["toml_utils"],"d":[""],"i":[0],"f":[[[["vec",3]],["table",6]]],"p":[]},\
"toy_vms":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["EasyVM","borrow","borrow_mut","call","cleanup","create_runtime","deref","deref_mut","drop","from","init","into","into_effects","try_from","try_into","type_id","vzip"],"q":["toy_vms","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[["peerid",3],["string",3],["vec",3,[["u8",15]]],["str",15],["callresults",6]],["result",4,[["avmoutcome",3]]]],[[["str",15]],["result",4]],[[["option",4,[["duration",3]]],["waker",3]],["boxfuture",6,[["result",4]]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[["result",4,[["avmoutcome",3]]],["particle",3]],["particleeffects",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"EasyVM"]]},\
"uuid_utils":{"doc":"","t":[5],"n":["uuid"],"q":["uuid_utils"],"d":[""],"i":[0],"f":[[[],["string",3]]],"p":[]},\
"waiting_queues":{"doc":"","t":[4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Enqueued","Existing","New","WaitingQueues","borrow","borrow","borrow_mut","borrow_mut","count","default","enqueue","fmt","from","from","into","into","new","remove","remove_with","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["waiting_queues","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents a result of the enqueue_promise operation","","","","","","","","Returns number of items on key <code>k</code>. Useful for debug.","","Inserts <code>item</code> in the queue associated with <code>key</code>","","","","","","","Removes queue associated with <code>key</code>","Removes items on key <code>k</code> that satisfy <code>remove</code> predicate …","","","","","",""],"i":[0,1,1,0,1,2,1,2,2,2,2,2,1,2,1,2,2,2,2,1,2,1,2,1,2],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[],["enqueued",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Enqueued"],[3,"WaitingQueues"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};